apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

// Computes code coverage of (unit) tests
apply plugin: 'jacoco'

dependencies {
    checkstyle('com.puppycrawl.tools:checkstyle:6.5')
    pmd('net.sourceforge.pmd:pmd-core:5.3.3')
    pmd('net.sourceforge.pmd:pmd-java:5.3.3')
    // the FindBugs version is set in the configuration
}

version = '2.0.0'
ext {
    appName = 'DestinationSol'
    gdxVersion = '1.7.0'
    roboVMVersion = '1.8.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Good ole Maven central
    mavenCentral()

    // Repos for LibGDX
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }

    // Terasology Artifactory for any shared libs
    maven { url "http://artifactory.terasology.org/artifactory/virtual-repo-live" }
}

test {
    // ignoreFailures: Specifies whether the build should break when the verifications performed by this task fail.
    ignoreFailures = true

    // showStandardStreams: makes the standard streams (err and out) visible at console when running tests
    testLogging.showStandardStreams = true

    // Arguments to include while running tests
    jvmArgs '-Xms512m', '-Xmx1024m'

    jacoco {
        append = false
    }
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

jacocoTestReport {
    dependsOn test // Despite doc saying this should be automatic we need to explicitly add it anyway :-(
    reports {
        // We only use the .exec report for display in Jenkins and such. More could be enabled if desired.
        xml.enabled false
        csv.enabled false
        html.enabled false
    }
}

// The config files here work in both a multi-project workspace (IDEs, running from source) and for solo module builds
// Solo module builds in Jenkins get a copy of the config dir from the engine harness so it still lives at root/config
// TODO: Maybe update other projects like modules to pull the zipped dependency so fewer quirks are needed in Jenkins
checkstyle {
    ignoreFailures = true
    configFile = new File(rootDir, 'config/metrics/checkstyle/checkstyle.xml')
    configProperties.samedir = checkstyle.configFile.parentFile
}

pmd {
    ignoreFailures = true
    ruleSetFiles = files("$rootDir/config/metrics/pmd/pmd.xml")
    // By default, gradle uses both ruleset file AND the rulesets. Override the ruleSets to use only those from the file
    ruleSets = []
}

findbugs {
    ignoreFailures = true
    toolVersion = '3.0.1'
    excludeFilter = new File(rootDir, "config/metrics/findbugs/findbugs-exclude.xml")
}

// TODO: Temporary until javadoc has been fixed for Java 8 everywhere
javadoc {
    failOnError = false
}

tasks.withType(Checkstyle) {
    group = 'Reporting'
}

tasks.withType(Pmd) {
    group = 'Reporting'
}
tasks.withType(FindBugs) {
    group = 'Reporting'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

// Make sure our config file for code analytics get extracted (vulnerability: non-IDE execution of single analytic)
ideaModule.dependsOn rootProject.extractConfig
tasks.eclipse.dependsOn rootProject.extractConfig
check.dependsOn rootProject.extractConfig